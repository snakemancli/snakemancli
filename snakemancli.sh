#!/bin/bash

# Environment variables
export OPENAI_API_KEY="sk-pppppppprrrrrrrooooooojjjjjeeeeccccctttttkkkkkeeeeyyyyy"
export GOOGLE_APPLICATION_CREDENTIALS="/home/based/king/snakeman/project-name-420-twotimesaday.json"
export YOUTUBE_API_KEY="g3tth3k3y5fr0mth3w3b5it35"






# Directories
SOURCE_FOLDER="./source_material"
OLD_SOURCE_FOLDER="./finished_material/old_source_material"
PROJECT_FOLDER="./finished_material/project_final_clips"
TEST_FOLDER="./finished_material/test_material"
VENV_FOLDER="./venv"
TEMP_FOLDER="./temp"
FRAMES_FOLDER="$TEMP_FOLDER/frames"
TTS_OUTPUT_FOLDER="$TEMP_FOLDER/tts_outputs"
REQUIREMENTS_FILE="./text_files/requirements.txt"
REQUIREMENTS_CPU_FILE="./text_files/requirements_cpu.txt"

# Create necessary directories
mkdir -p $SOURCE_FOLDER $OLD_SOURCE_FOLDER $PROJECT_FOLDER $TEST_FOLDER $TEMP_FOLDER $FRAMES_FOLDER $TTS_OUTPUT_FOLDER

# Set up virtual environment
if [ ! -d "$VENV_FOLDER" ]; then
    python3 -m venv $VENV_FOLDER
    echo "Virtual environment created at $VENV_FOLDER"
fi

source $VENV_FOLDER/bin/activate
echo -e "\033[0;32mVirtual environment activated\033[0m"

# Display welcome banner
echo -e "\033[1;34m"
cat << "EOF"
  ______    __    __    ______    __    __   ________   __        __   ______    __    __                       ______    __        ______ 
 /      \  |  \  |  \  /      \  |  \  /  \ |        \ |  \     /  \  /      \  |  \  |  \                     /      \  |  \      |      \
|  $$$$$$\ | $$\ | $$ |  $$$$$$\ | $$ /  $$ | $$$$$$$$ | $$\   /  $$ |  $$$$$$\ | $$\ | $$                    |  $$$$$$\ | $$       \$$$$$$
| $$___\$$ | $$$\| $$ | $$__| $$ | $$/  $$  | $$__     | $$$\ /  $$$ | $$__| $$ | $$$\| $$       ______       | $$   \$$ | $$        | $$  
 \$$    \  | $$$$\ $$ | $$    $$ | $$  $$   | $$  \    | $$$$\  $$$$ | $$    $$ | $$$$\ $$      |      \      | $$       | $$        | $$  
 _\$$$$$$\ | $$\$$ $$ | $$$$$$$$ | $$$$$\   | $$$$$    | $$\$$ $$ $$ | $$$$$$$$ | $$\$$ $$       \$$$$$$      | $$   __  | $$        | $$  
|  \__| $$ | $$ \$$$$ | $$  | $$ | $$ \$$\  | $$_____  | $$ \$$$| $$ | $$  | $$ | $$ \$$$$                    | $$__/  \ | $$_____  _| $$_ 
 \$$    $$ | $$  \$$$ | $$  | $$ | $$  \$$\ | $$     \ | $$  \$ | $$ | $$  | $$ | $$  \$$$                     \$$    $$ | $$     \|   $$ \
  \$$$$$$   \$$   \$$  \$$   \$$  \$$   \$$  \$$$$$$$$  \$$      \$$  \$$   \$$  \$$   \$$                      \$$$$$$   \$$$$$$$$ \$$$$$$
EOF
echo -e "\033[0m"

while true; do
    # Main menu
    echo "################################################################################################################"
    echo "################################################################################################################"
    echo "####################################               MAIN MENU                ####################################"
    echo "################################################################################################################"
    echo "###################################    Choose an option:                    ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    1) Download Youtube                  ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    2) Auto download and create          ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    3) Auto Caption                      ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    4) Short No TTS                      ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    5) Long TTS                          ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    6) Short TTS                         ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    7) Auto Thumbnail                    ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    8) Dependency check                  ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    9) JPG Converter                     ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    10) Animate Image Standalone         ####################################"
    echo "###################################-----------------------------------------####################################"
    echo "###################################    11) Exit                             ####################################"
    echo "################################################################################################################"
    read -p "###################################    Enter your choice: " main_option              

    case $main_option in
        1)
            echo "################################################################################################################"
            echo "################################################################################################################"
            echo "####################################          DOWNLOAD MODE SELECTED         ###################################"
            echo "################################################################################################################"
            echo "###################################    Choose the type of download:           ##################################"
            echo "###################################-------------------------------------------##################################"
            echo "###################################    1) Video downloader                    ##################################"
            echo "###################################-------------------------------------------##################################"
            echo "###################################    2) Image downloader                    ##################################"
            echo "###################################-------------------------------------------##################################"
            echo "################################################################################################################"
            read -p "###################################    Enter your choice: " download_option

            case $download_option in
                1)
                    echo "################################################################################################################"
                    echo "################################################################################################################"
                    echo "####################################   Enter the keyword (boxer name)         ##################################"
                    echo "###################################-------------------------------------------##################################"
                    echo "###################################         to search for videos:            ###################################"
                    echo "################################################################################################################"
                    read keyword
                    python srcipts/video_downloader.py "$keyword"
                    ;;
                2)
                    echo "################################################################################################################"
                    echo "################################################################################################################"
                    echo "####################################   Enter the keyword (boxer name)         ##################################"
                    echo "###################################-------------------------------------------##################################"
                    echo "####################################         to search for images:            ##################################"
                    echo "################################################################################################################"
                    read keyword
                    python srcipts/image_downloader.py "$keyword"
                    ;;
                *)
                    echo -e "\033[0;31m################################################################################################################\033[0m"
                    echo -e "\033[0;31m################################################################################################################\033[0m"
                    echo -e "\033[0;31m####################################        Invalid choice. Returning to menu...   ##################################\033[0m"
                    echo -e "\033[0;31m################################################################################################################\033[0m"
                    ;;
            esac
            ;;
        2)
            echo "################################################################################################################"
            echo "################################################################################################################"
            echo "####################################   Enter the keyword (boxer name)         ##################################"
            echo "###################################-------------------------------------------##################################"
            echo "####################################          to search for:                  ##################################"
            echo "################################################################################################################"
            read keyword
            python srcipts/video_downloader.py "$keyword"
            if [ $? -eq 0 ]; then
                python srcipts/snakeman.py "$SOURCE_FOLDER" "$OLD_SOURCE_FOLDER" "$PROJECT_FOLDER" "$FRAMES_FOLDER" "$TTS_OUTPUT_FOLDER"
            else
                echo -e "\033[0;31m################################################################################################################\033[0m"
                echo -e "\033[0;31m################################################################################################################\033[0m"
                echo -e "\033[0;31m####################################  Video download failed. Returning to menu...      ###################################\033[0m"
                echo -e "\033[0;31m################################################################################################################\033[0m"
            fi
            ;;
        3)
            echo "################################################################################################################"
            echo "################################################################################################################"
            echo "####################################        Image Captioner Selected         ###################################"
            echo "################################################################################################################"
            echo "#################################### Processing images in source folder      ###################################"
            echo "################################################################################################################"
            python srcipts/image_captioner.py "$SOURCE_FOLDER"
            ;;
        4)
            echo "################################################################################################################"
            echo "################################################################################################################"
            echo "####################################        No TTS Edit Selected             ###################################"
            echo "################################################################################################################"
            echo "#################################### Processing videos in source folder      ###################################"
            echo "################################################################################################################"
            python srcipts/snakeman_no_tts.py "$SOURCE_FOLDER" "$OLD_SOURCE_FOLDER" "$PROJECT_FOLDER"
            ;;
        5)
            echo "################################################################################################################"
            echo "################################################################################################################"
            echo "####################################        Warhammer Selected               ###################################"
            echo "################################################################################################################"
            echo "#################################### Processing Warhammer content            ###################################"
            echo "################################################################################################################"
            python srcipts/warhammer.py "$SOURCE_FOLDER"
            ;;
        6)
            echo "################################################################################################################"
            echo "################################################################################################################"
            echo "####################################        TTS Edit Selected                 ##################################"
            echo "################################################################################################################"
            echo "#################################### Processing videos in source folder      ###################################"
            echo "################################################################################################################"
            python srcipts/snakeman.py "$SOURCE_FOLDER" "$OLD_SOURCE_FOLDER" "$PROJECT_FOLDER" "$FRAMES_FOLDER" "$TTS_OUTPUT_FOLDER"
            ;;
        7)
            echo "################################################################################################################"
            echo "################################################################################################################"
            echo "###################################        Thumbnail Maker Selected         ####################################"
            echo "################################################################################################################"
            echo "################################### Processing images for thumbnails        ####################################"
            echo "################################################################################################################"
            python srcipts/thumbnail_maker.py
            ;;
        8)
            echo "################################################################################################################"
            echo "################################################################################################################"
            echo "####################################      Choose an option for dependencies:  ##################################"
            echo "####################################      1) General requirements            ###################################"
            echo "####################################      2) CPU-only requirements           ###################################"
            echo "################################################################################################################"
            read -p "###################################    Enter your choice: " dep_choice

            case $dep_choice in
                1)
                    pip install -r $REQUIREMENTS_FILE
                    ;;
                2)
                    pip install -r $REQUIREMENTS_CPU_FILE
                    ;;
                *)
                    echo -e "\033[0;31m################################################################################################################\033[0m"
                    echo -e "\033[0;31m################################################################################################################\033[0m"
                    echo -e "\033[0;31m####################################        Invalid choice. Returning to menu...        ###################################\033[0m"
                    echo -e "\033[0;31m################################################################################################################\033[0m"
                    ;;
            esac
            ;;

        9)
            echo "################################################################################################################"
            echo "################################################################################################################"
            echo "####################################        WebP to JPG Conversion Selected   ###################################"
            echo "################################################################################################################"
            echo "#################################### Enter the path to the folder to process: ###################################"
            read folder_path
            python srcipts/convert.py "$folder_path"
            ;;
        
        10)
            echo "################################################################################################################"
            echo "################################################################################################################"
            echo "####################################        Run stand.py Selected            ###################################"
            echo "################################################################################################################"
            read -p "Enter the path to the folder containing image files: " image_folder
            read -p "Enter the output folder path: " output_folder
            read -p "Enter the path to the audio file (optional): " audio_file

            if [ -z "$audio_file" ]; then
                python srcipts/stand.py --images "$image_folder" --output "$output_folder"
            else
                python srcipts/stand.py --images "$image_folder" --output "$output_folder" --audio "$audio_file"
            fi
            ;;


        11)
            echo -e "\033[0;32m################################################################################################################\033[0m"
            echo -e "\033[0;32m################################################################################################################\033[0m"
            echo -e "\033[0;32m####################################  Exiting...                           ####################################\033[0m"
            echo -e "\033[0;32m################################################################################################################\033[0m"
            echo -e "\033[0;32m################################################################################################################\033[0m"
            break
            ;;
        *)
            echo -e "\033[0;31m################################################################################################################\033[0m"
            echo -e "\033[0;31m################################################################################################################\033[0m"
            echo -e "\033[0;31m####################################        Invalid choice. Returning to menu...        ###################################\033[0m"
            echo -e "\033[0;31m################################################################################################################\033[0m"
            ;;
    esac
done

# Deactivate virtual environment
deactivate
echo -e "\033[0;32m################################################################################################################\033[0m"
echo -e "\033[0;32m################################################################################################################\033[0m"
echo -e "\033[0;32m####################################  Virtual environment deactivated       ####################################\033[0m"
echo -e "\033[0;32m################################################################################################################\033[0m"
echo -e "\033[0;32m################################################################################################################\033[0m"