#!/bin/bash

export OPENAI_API_KEY="sk-pppppppprrrrrrrooooooojjjjjeeeeccccctttttkkkkkeeeeyyyyy"
export GOOGLE_APPLICATION_CREDENTIALS="/home/based/king/snakeman/project-name-420-twotimesaday.json"
export YOUTUBE_API_KEY="g3tth3k3y5fr0mth3w3b5it35"
export SEARCH_ENGINE_ID="where_key"



# Directories
SOURCE_FOLDER="./source_material"
OLD_SOURCE_FOLDER="./finished_material/old_source_material"
PROJECT_FOLDER="./finished_material/project_final_clips"
TEST_FOLDER="./finished_material/test_material"
VENV_FOLDER="./venv"
TEMP_FOLDER="./temp"
FRAMES_FOLDER="$TEMP_FOLDER/frames"
TTS_OUTPUT_FOLDER="$TEMP_FOLDER/tts_outputs"
REQUIREMENTS_FILE="./text_files/requirements.txt"
REQUIREMENTS_CPU_FILE="./text_files/requirements_cpu.txt"


mkdir -p $SOURCE_FOLDER $OLD_SOURCE_FOLDER $PROJECT_FOLDER $TEST_FOLDER $TEMP_FOLDER $FRAMES_FOLDER $TTS_OUTPUT_FOLDER


if [ ! -d "$VENV_FOLDER" ]; then
    python3 -m venv $VENV_FOLDER
    echo "Virtual environment created at $VENV_FOLDER"
fi


source $VENV_FOLDER/bin/activate
echo -e "\033[0;32mVirtual environment activated\033[0m"


echo -e "\033[1;34m"
cat << "EOF"
  ______    __    __    ______    __    __   ________   __        __   ______    __    __                       ______    __        ______ 
 /      \  |  \  |  \  /      \  |  \  /  \ |        \ |  \     /  \  /      \  |  \  |  \                     /      \  |  \      |      \
|  $$$$$$\ | $$\ | $$ |  $$$$$$\ | $$ /  $$ | $$$$$$$$ | $$\   /  $$ |  $$$$$$\ | $$\ | $$                    |  $$$$$$\ | $$       \$$$$$$
| $$___\$$ | $$$\| $$ | $$__| $$ | $$/  $$  | $$__     | $$$\ /  $$$ | $$__| $$ | $$$\| $$       ______       | $$   \$$ | $$        | $$  
 \$$    \  | $$$$\ $$ | $$    $$ | $$  $$   | $$  \    | $$$$\  $$$$ | $$    $$ | $$$$\ $$      |      \      | $$       | $$        | $$  
 _\$$$$$$\ | $$\$$ $$ | $$$$$$$$ | $$$$$\   | $$$$$    | $$\$$ $$ $$ | $$$$$$$$ | $$\$$ $$       \$$$$$$      | $$   __  | $$        | $$  
|  \__| $$ | $$ \$$$$ | $$  | $$ | $$ \$$\  | $$_____  | $$ \$$$| $$ | $$  | $$ | $$ \$$$$                    | $$__/  \ | $$_____  _| $$_ 
 \$$    $$ | $$  \$$$ | $$  | $$ | $$  \$$\ | $$     \ | $$  \$ | $$ | $$  | $$ | $$  \$$$                     \$$    $$ | $$     \|   $$ \
  \$$$$$$   \$$   \$$  \$$   \$$  \$$   \$$  \$$$$$$$$  \$$      \$$  \$$   \$$  \$$   \$$                      \$$$$$$   \$$$$$$$$ \$$$$$$
EOF
echo -e "\033[0m"

# Main menu
echo "                          ############################################################################"
echo "                          ############################################################################"
echo "                          ##################               MAIN MENU                ##################"
echo "                          ############################################################################"
echo "                          #################    Choose an option:                    ##################"
echo "                          #################-----------------------------------------##################"
echo "                          #################    1) Download mode                     ##################"
echo "                          #################-----------------------------------------##################"
echo "                          #################    2) Automated download and creation   ##################"
echo "                          #################-----------------------------------------##################"
echo "                          #################    3) Image captioner                   ##################"
echo "                          #################-----------------------------------------##################"
echo "                          #################    4) No TTS edit                       ##################"
echo "                          #################-----------------------------------------##################"
echo "                          #################    5) Warhammer                         ##################"
echo "                          #################-----------------------------------------##################"
echo "                          #################    6) TTS edit                          ##################"
echo "                          #################-----------------------------------------##################"
echo "                          #################    7) Dependency check                  ##################"
echo "                          #################-----------------------------------------##################"
echo "                          ############################################################################"
read -p "                           Enter your choice: " main_option

if [ "$main_option" -eq 1 ]; then
    echo "                          ############################################################################"
    echo "                          ############################################################################"
    echo "                          ##################          DOWNLOAD MODE SELECTED         #################"
    echo "                          ############################################################################"
    echo "                          #################    Choose the type of download:           ################"
    echo "                          #################-------------------------------------------################"
    echo "                          #################    1) Video downloader                    ################"
    echo "                          #################-------------------------------------------################"
    echo "                          #################    2) Image downloader                    ################"
    echo "                          #################-------------------------------------------################"
    echo "                          ############################################################################"
    read -p "                          Enter your choice: " download_option

    if [ "$download_option" -eq 1 ]; then
        echo "                          ############################################################################"
        echo "                          ############################################################################"
        echo "                          ##################   Enter the keyword (boxer name)         ################"
        echo "                          #################-------------------------------------------################"
        echo "                          #################         to search for videos:            #################"
        echo "                          ############################################################################"
        read keyword
        python srcipts/video_downloader.py "$keyword"
    elif [ "$download_option" -eq 2 ]; then
        echo "                          ############################################################################"
        echo "                          ############################################################################"
        echo "                          ##################   Enter the keyword (boxer name)         ################"
        echo "                          #################-------------------------------------------################"
        echo "                          ##################         to search for images:            ################"
        echo "                          ############################################################################"
        read keyword
        python srcipts/image_downloader.py "$keyword"
    else
        echo -e "               \033[0;31m############################################################################\033[0m"
        echo -e "               \033[0;31m############################################################################\033[0m"
        echo -e "               \033[0;31m##################        Invalid choice. Exiting...        #################\033[0m"
        echo -e "               \033[0;31m############################################################################\033[0m"
        echo -e "               \033[0;31m############################################################################\033[0m"
        deactivate
        exit 1
    fi




elif [ "$main_option" -eq 2 ]; then
    echo "                          ############################################################################"
    echo "                          ############################################################################"
    echo "                          ##################   Enter the keyword (boxer name)         #################"
    echo "                          #################-------------------------------------------################"
    echo "                          ##################          to search for:                  #################"
    echo "                          ############################################################################"
    read keyword
    python srcipts/video_downloader.py "$keyword"
    if [ $? -eq 0 ]; then
        python srcipts/snakeman.py "$SOURCE_FOLDER" "$OLD_SOURCE_FOLDER" "$PROJECT_FOLDER" "$FRAMES_FOLDER" "$TTS_OUTPUT_FOLDER"
    else
        echo -e "               \033[0;31m############################################################################\033[0m"
        echo -e "               \033[0;31m############################################################################\033[0m"
        echo -e "               \033[0;31m##################  Video download failed. Exiting...      ##################\033[0m"
        echo -e "               \033[0;31m############################################################################\033[0m"
        echo -e "               \033[0;31m############################################################################\033[0m"
        deactivate
        exit 1
    fi




elif [ "$main_option" -eq 3 ]; then
    echo "                          ############################################################################"
    echo "                          ############################################################################"
    echo "                          ##################        Image Captioner Selected         #################"
    echo "                          ############################################################################"
    echo "                          ################## Processing images in source folder      #################"
    echo "                          ############################################################################"
    python srcipts/image_captioner.py "$SOURCE_FOLDER"


elif [ "$main_option" -eq 4 ]; then
    echo "                          ############################################################################"
    echo "                          ############################################################################"
    echo "                          ##################        No TTS Edit Selected             #################"
    echo "                          ############################################################################"
    echo "                          ################## Processing videos in source folder      #################"
    echo "                          ############################################################################"
    python srcipts/snakeman_no_tts.py "$SOURCE_FOLDER" "$OLD_SOURCE_FOLDER" "$PROJECT_FOLDER"

elif [ "$main_option" -eq 5 ]; then
    echo "                          ############################################################################"
    echo "                          ############################################################################"
    echo "                          ##################        Warhammer Selected               #################"
    echo "                          ############################################################################"
    echo "                          ################## Processing Warhammer content            #################"
    echo "                          ############################################################################"
    python srcipts/warhammer.py "$SOURCE_FOLDER"


elif [ "$main_option" -eq 6 ]; then
    echo "                          ############################################################################"
    echo "                          ############################################################################"
    echo "                          ##################        TTS Edit Selected                 #################"
    echo "                          ############################################################################"
    echo "                          ################## Processing videos in source folder      #################"
    echo "                          ############################################################################"
    python srcipts/snakeman.py "$SOURCE_FOLDER" "$OLD_SOURCE_FOLDER" "$PROJECT_FOLDER" "$FRAMES_FOLDER" "$TTS_OUTPUT_FOLDER"



elif [ "$main_option" -eq 7 ]; then
    echo "                          ############################################################################"
    echo "                          ############################################################################"
    echo "                          ##################      Choose an option for dependencies:  #################"
    echo "                          ##################      1) General requirements            #################"
    echo "                          ##################      2) CPU-only requirements           #################"
    echo "                          ############################################################################"
    read -p "                       Enter your choice (1 or 2): " dep_choice

    if [ "$dep_choice" -eq 1 ]; then
        pip install -r $REQUIREMENTS_FILE
    elif [ "$dep_choice" -eq 2 ]; then
        pip install -r $REQUIREMENTS_CPU_FILE
    else
        echo -e "                   \033[0;31m############################################################################\033[0m"
        echo -e "                   \033[0;31m############################################################################\033[0m"
        echo -e "                   \033[0;31m##################        Invalid choice. Exiting...        #################\033[0m"
        echo -e "                   \033[0;31m############################################################################\033[0m"
        echo -e "                   \033[0;31m############################################################################\033[0m"
        deactivate
        exit 1
    fi

else
    echo -e "                       \033[0;31m############################################################################\033[0m"
    echo -e "                       \033[0;31m############################################################################\033[0m"
    echo -e "                       \033[0;31m##################        Invalid choice. Exiting...        #################\033[0m"
    echo -e "                       \033[0;31m############################################################################\033[0m"
    echo -e "                       \033[0;31m############################################################################\033[0m"
    deactivate
    exit 1
fi

# Deactivate virtual environment
deactivate
echo -e "                           \033[0;32m############################################################################\033[0m"
echo -e "                           \033[0;32m############################################################################\033[0m"
echo -e "                           \033[0;32m##################  Virtual environment deactivated       ##################\033[0m"
echo -e "                           \033[0;32m############################################################################\033[0m"
echo -e "                           \033[0;32m############################################################################\033[0m"

# Deactivate virtual environment
deactivate
echo -e "                               \033[0;32m######################################"
echo "                                           # Virtual environment deactivated    #"
echo "                                  ############################################\033[0m"